@using PBL3.ViewModels.Story
@model StoryEditViewModel

@{
    ViewData["Title"] = "Edit Story Details";
    Layout = "~/Views/Shared/_StoryEditorLayout.cshtml";
}

<style>
    .badge-modern {
        background-color: #1f1f1f;
        color: white;
        font-weight: 500;
        padding: 0.6em 1em;
        border-radius: 999px;
    }

    .btn-modern {
        border-radius: 8px;
        font-weight: 500;
        transition: all 0.2s ease-in-out;
    }

        .btn-modern:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.15);
        }

    .chapter-table th {
        background-color: #f8f9fa;
        font-weight: 600;
    }

    .chapter-table td, .chapter-table th {
        vertical-align: middle;
    }

    .chapter-table tr:hover {
        background-color: #f1f1f1;
    }

    h2, h3 {
        font-weight: 700;
        color: #111;
    }

    p {
        color: #444;
    }

    .genre-badge {
        background-color: #ff6b6b;
        color: white;
        padding: 0.4em 0.8em;
        border-radius: 8px;
        margin-right: 0.5em;
        font-size: 0.9em;
    }
</style>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success" role="alert">
        @TempData["SuccessMessage"]
    </div>
}

<div class="container py-5">
    <div class="row mb-4 align-items-center">
        <div class="col-md-3 text-center">
            <img src="@Model.CoverImage" class="img-fluid rounded shadow-sm" alt="Cover Image" style="max-height: 280px;">
        </div>
        <div class="col-md-9">
            <h2>@Model.Title</h2>

            <!-- Status -->
            <p class="mt-2">
                <strong>Status:</strong>
                @if (Model.StoryStatus == PBL3.Models.StoryModel.StoryStatus.Active)
                {
                    <span class="badge bg-success">Published</span>
                }
                else
                {
                    <span class="badge bg-secondary">Draft</span>
                }
            </p>

            <p>@Model.Description</p>

            <!-- Genres -->
            @if (Model.AvailableGenres != null && Model.GenreIDs != null)
            {
                <div class="mt-2">
                    @foreach (var genre in Model.AvailableGenres.Where(g => Model.GenreIDs.Contains(g.GenreID)))
                    {
                        <span class="genre-badge">@genre.Name</span>
                    }
                </div>
            }

            <!-- Stats -->
            <div class="d-flex flex-wrap gap-2 mt-3">
                <span class="badge-modern">👍 Likes: @Model.TotalLike</span>
                <span class="badge-modern">🔖 Bookmarks: @Model.TotalBookmark</span>
                <span class="badge-modern">💬 Comments: @Model.TotalComment</span>
                <span class="badge-modern">📖 Chapters: @Model.TotalChapter</span>
                <span class="badge-modern">👁️ Views: @Model.TotalView</span>
            </div>

            <div class="mt-4 d-flex gap-3">
                <a asp-controller="Story" asp-action="Edit" asp-route-id="@Model.StoryID" class="btn btn-outline-dark btn-modern">✏️ Edit Story</a>


                <form asp-action="Delete" asp-controller="Story" method="post" style="display:inline;">
                    <input type="hidden" name="StoryID" value="@Model.StoryID" />
                    <button type="submit" class="btn btn-sm btn-outline-danger btn-modern" onclick="return confirm('Are you sure you want to delete this story?');">🗑️ Delete</button>
                </form>

                @if (Model.StoryStatus == PBL3.Models.StoryModel.StoryStatus.Active)
                {
                    <form asp-action="UpdateStatus" asp-controller="Story" method="post" onsubmit="return confirm('Are you sure you want to set this story to draft?');">
                        <input type="hidden" name="StoryID" value="@Model.StoryID" />
                        <input type="hidden" name="NewStatus" value="Inactive" />
                        <button type="submit" class="btn btn-warning btn-modern">📝 Set to Draft</button>
                    </form>
                }
                else
                {
                    <form asp-action="UpdateStatus" asp-controller="Story" method="post" onsubmit="return confirm('Are you sure you want to publish this story?');">
                        <input type="hidden" name="StoryID" value="@Model.StoryID" />
                        <input type="hidden" name="NewStatus" value="Active" />
                        <button type="submit" class="btn btn-success btn-modern">🚀 Publish</button>
                    </form>
                }
            </div>
        </div>
    </div>

    <hr />

    <!-- Chapters -->
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h3>📚 Chapters</h3>
        <button id="toggleAddChapter" type="button" class="btn btn-dark btn-modern">➕ Add Chapter</button>
    </div>

    <div class="table-responsive">
        <table class="table table-bordered chapter-table">
            <thead>
                <tr>
                    <th style="width: 80px;">#</th>
                    <th>Title</th>
                    <th style="width: 110px">Created</th>
                    <th style="width: 110px">Updated</th>
                    <th style="width: 110px">Views</th>
                    <th style="width: 110px">Status</th>
                    <th style="width: 170px">Actions</th>
                </tr>
            </thead>
            <tbody id="chapterTableBody">

                <!-- Inline Add Chapter Row -->
                <tr id="inlineChapterForm" style="display: none;">
                    <form id="createChapterForm" asp-controller="Chapter" asp-action="CreateChapter" method="post">
                        <input type="hidden" name="StoryID" value="@Model.StoryID" />
                    <td>-</td>
                    <td><input type="text" name="Title" class="form-control" placeholder="Enter chapter title..." required /></td>
                    <td>-</td>
                    <td>-</td>
                    <td>0</td>
                    <td>-</td>
                    <td>
                        <button type="submit" class="btn btn-sm btn-dark btn-modern">Save</button>
                        <button type="button" id="cancelAddChapter" class="btn btn-sm btn-secondary btn-modern">Cancel</button>
                    </td>
                    </form>
                </tr>

                @if (Model.Chapters != null && Model.Chapters.Any())
                {
                    int index = 1;
                    foreach (var chapter in Model.Chapters.OrderBy(c => c.ChapterOrder))
                    {
                        var rowClass = chapter.Status == PBL3.ViewModels.Chapter.ChapterSummaryViewModel.ChapterStatus.Inactive ? "table-secondary text-muted" : "";

                        <tr class="@rowClass">
                            <td>@index</td>
                            <td>@chapter.Title</td>
                            <td>@chapter.CreatedAt.ToString("yyyy-MM-dd")</td>
                            <td>@(chapter.UpdatedAt?.ToString("yyyy-MM-dd") ?? "N/A")</td>
                            <td>@chapter.ViewCount</td>
                            <td>
                                @if (chapter.Status == PBL3.ViewModels.Chapter.ChapterSummaryViewModel.ChapterStatus.Inactive)
                                {
                                    <span class="badge bg-secondary">Draft</span>
                                }
                                else
                                {
                                    <span class="badge bg-success">Published</span>
                                }
                            </td>
                            <td>
                                <a href="@Url.Action("EditChapter", "Chapter", new { chapterId = chapter.ChapterID, storyId = Model.StoryID })"
                                   class="btn btn-sm btn-outline-dark btn-modern">
                                    ✏️ Edit
                                </a>

                                <form asp-action="DeleteChapter" asp-controller="Chapter" method="post" style="display:inline;">
                                    <input type="hidden" name="chapterID" value="@chapter.ChapterID" />
                                    <input type="hidden" name="storyID" value="@Model.StoryID" />
                                    <button type="submit" class="btn btn-sm btn-outline-danger btn-modern" onclick="return confirm('Are you sure you want to delete this chapter?');">🗑️</button>
                                </form>
                            </td>
                        </tr>
                        index++;
                    }
                }
                else
                {
                    <tr>
                        <td colspan="7" class="text-center text-muted">No chapters available yet. Start by adding a new one!</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const formContainer = document.getElementById("inlineChapterForm");
            const form = document.querySelector("#createChapterForm");
            const toggleButton = document.getElementById("toggleAddChapter");
            const cancelButton = document.getElementById("cancelAddChapter");

            toggleButton.addEventListener("click", () => {
                formContainer.style.display = "table-row";
                toggleButton.style.display = "none";
            });

            cancelButton.addEventListener("click", () => {
                formContainer.style.display = "none";
                toggleButton.style.display = "inline-block";
                form.reset();
            });

            form.addEventListener("submit", async function (e) {
                e.preventDefault();

                const formData = new FormData(form);

                try {
                    const response = await fetch(form.action, {
                        method: "POST",
                        headers: {
                            "X-Requested-With": "XMLHttpRequest"
                        },
                        body: formData
                    });

                    if (response.ok) {
                        window.location.reload();
                    } else {
                        alert("Something went wrong while creating the chapter!");
                    }
                } catch (error) {
                    console.error("Fetch error:", error);
                    alert("An error occurred while creating the chapter!");
                }
            });
        });
    </script>
}
