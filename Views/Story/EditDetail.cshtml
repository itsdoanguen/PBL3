@model PBL3.ViewModels.StoryEditViewModel

@{
    ViewData["Title"] = "Edit Story Details";
    Layout = "~/Views/Shared/_StoryEditorLayout.cshtml";
}

<div class="container py-4">
    <div class="row mb-4">
        <div class="col-md-3">
            <img src="@Model.CoverImage" class="img-fluid rounded shadow" alt="Cover Image">
        </div>
        <div class="col-md-9">
            <h2 class="mb-3">@Model.Title</h2>
            <p class="text-muted">@Model.Description</p>

            <div class="d-flex flex-wrap gap-3 mt-3">
                <span class="badge bg-primary p-2">Likes: @Model.TotalLike</span>
                <span class="badge bg-success p-2">Bookmarks: @Model.TotalBookmark</span>
                <span class="badge bg-warning text-dark p-2">Comments: @Model.TotalComment</span>
                <span class="badge bg-info text-dark p-2">Chapters: @Model.TotalChapter</span>
				<span class="badge bg-secondary p-2">Views: @Model.TotalView</span>
            </div>

            <div class="mt-4">
                <a href="" class="btn btn-outline-primary">✏️ Edit Story</a>
                <a href="" class="btn btn-outline-danger">🗑️ Delete Story</a>
            </div>
        </div>
    </div>

    <hr />

    <div class="d-flex justify-content-between align-items-center mb-3">
        <h3>📚 Chapters</h3>
        <a href="" class="btn btn-success">➕ Add Chapter</a>
    </div>

    @if (Model.Chapters != null && Model.Chapters.Any())
    {
        <div class="table-responsive">
            <table class="table table-bordered table-hover align-middle">
                <thead class="table-light">
                    <tr>
                        <th>#</th>
                        <th>Title</th>
                        <th>Created</th>
                        <th>Updated</th>
                        <th>Views</th>
                        <th style="width: 160px">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var chapter in Model.Chapters.OrderByDescending(c => c.CreatedAt))
                    {
                        <tr>
                            <td>@chapter.ChapterID</td>
                            <td>@chapter.Title</td>
                            <td>@chapter.CreatedAt.ToString("yyyy-MM-dd")</td>
                            <td>@(chapter.UpdatedAt?.ToString("yyyy-MM-dd") ?? "N/A")</td>
                            <td>@chapter.ViewCount</td>
                            <td>
                                <a href="" class="btn btn-sm btn-outline-secondary">✏️ Edit</a>
                                <a href="" class="btn btn-sm btn-outline-danger">🗑️ Delete</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <p class="text-muted">No chapters available yet. Start by adding a new one!</p>
    }
</div>
