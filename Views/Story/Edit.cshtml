@using PBL3.ViewModels.Story
@model StoryEditViewModel

@{
    ViewData["Title"] = "Edit Story";
    Layout = "~/Views/Shared/_StoryEditorLayout.cshtml";  
}

<link rel="stylesheet" href="~/css/story-edit.css" asp-append-version="true" />

<div class="container py-5 story-edit-container">
    <h2>Chỉnh sửa truyện</h2>
    
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger" role="alert">
            @TempData["ErrorMessage"]
        </div>
    }
    
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success" role="alert">
            @TempData["SuccessMessage"]
        </div>
    }
    
    <form asp-action="Edit" method="post" enctype="multipart/form-data" class="row g-4">
        <input type="hidden" asp-for="StoryID" />
        
        <!-- Cột bên trái: Ảnh bìa -->
        <div class="col-md-4 d-flex flex-column align-items-center">
            <label for="coverPreview" class="form-label fw-bold">Ảnh Bìa</label>
            <div class="border rounded p-2 w-100 d-flex justify-content-center position-relative" style="height: 350px;">
                <img id="coverPreview" src="@Model.CoverImage" class="img-fluid rounded" style="max-height: 100%; object-fit: cover;">
                <div id="imageLoadingSpinner" class="position-absolute top-50 start-50 translate-middle d-none">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
            </div>
            <input type="file" id="coverInput" name="UploadCover" class="form-control mt-2" accept="image/jpeg,image/jpg,image/png" onchange="previewImage(this)">
            <small class="text-muted mt-1">Chấp nhận: JPG, JPEG, PNG. Tối đa: 1MB</small>
            <span asp-validation-for="UploadCover" class="text-danger"></span>
            <div id="imageError" class="text-danger mt-1" style="display: none;"></div>
        </div>

        <!-- Cột bên phải: Form nhập thông tin -->
        <div class="col-md-8">
            <div class="mb-3">
                <label asp-for="Title" class="form-label fw-bold"></label>
                <input asp-for="Title" class="form-control" required />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            
            <div class="mb-3">
                <label asp-for="Description" class="form-label fw-bold"></label>
                <textarea asp-for="Description" class="form-control" rows="6" required></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            
            <!-- Thể loại -->
            <div class="mb-3 position-relative">
                <label class="form-label fw-bold">Thể loại</label>
                <div id="genreTagList" class="genre-tag-list">
                    @foreach (var genre in Model.AvailableGenres.Where(g => Model.GenreIDs.Contains(g.GenreID)))
                    {
                        <span class="genre-tag" data-genre-id="@genre.GenreID">
                            @genre.Name <button type="button" class="remove-genre" title="Xóa">&times;</button>
                        </span>
                    }
                    <span class="ms-1"><button type="button" class="btn-add-genre" id="btnAddGenre" title="Thêm thể loại"><i class="bi bi-plus"></i></button></span>
                </div>
                <input type="hidden" name="GenreIDs" id="GenreIDsInput" value="@string.Join(",", Model.GenreIDs)" />
                <div id="genreDropdown" class="genre-dropdown">
                    @foreach (var genre in Model.AvailableGenres.Where(g => !Model.GenreIDs.Contains(g.GenreID)))
                    {
                        <div class="genre-dropdown-item" data-genre-id="@genre.GenreID">@genre.Name</div>
                    }
                </div>
                <span asp-validation-for="GenreIDs" class="text-danger"></span>
            </div>
            
            <div class="mb-3">
                <label class="form-label fw-bold">Trạng thái truyện</label>
                <select asp-for="StoryStatus" class="form-select">
                    <option value="1">Đang xuất bản</option>
                    <option value="0">Bản thảo</option>
                    <option value="2">Đã hoàn thành</option>
                </select>
            </div>
            
            <div class="d-flex gap-2">
                <button type="submit" class="btn btn-dark btn-modern" id="submitBtn">
                    <i class="fas fa-save me-2"></i>Lưu thay đổi
                </button>
                <a asp-action="EditDetail" asp-route-storyId="@Model.StoryID" class="btn btn-secondary btn-modern">
                    <i class="fas fa-times me-2"></i>Hủy
                </a>
            </div>
        </div>
    </form>
</div>

<script src="~/js/story-edit.js" asp-append-version="true"></script>

<script>
    function previewImage(input) {
        const file = input.files[0];
        const preview = document.getElementById('coverPreview');
        const errorDiv = document.getElementById('imageError');
        const loadingSpinner = document.getElementById('imageLoadingSpinner');
        
        // Reset trạng thái
        errorDiv.style.display = 'none';
        errorDiv.textContent = '';
        
        if (!file) {
            preview.src = '@Model.CoverImage';
            return;
        }
        
        // Validate file type
        const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png'];
        if (!allowedTypes.includes(file.type)) {
            errorDiv.textContent = 'Chỉ chấp nhận file JPG, JPEG hoặc PNG';
            errorDiv.style.display = 'block';
            input.value = '';
            return;
        }
        
        // Validate file size (1MB = 1048576 bytes)
        if (file.size > 1048576) {
            errorDiv.textContent = 'Kích thước file phải nhỏ hơn 1MB';
            errorDiv.style.display = 'block';
            input.value = '';
            return;
        }
        
        // Show loading
        loadingSpinner.classList.remove('d-none');
        
        const reader = new FileReader();
        reader.onload = function(e) {
            preview.src = e.target.result;
            loadingSpinner.classList.add('d-none');
        };
        reader.onerror = function() {
            errorDiv.textContent = 'Lỗi khi đọc file ảnh';
            errorDiv.style.display = 'block';
            loadingSpinner.classList.add('d-none');
            input.value = '';
        };
        reader.readAsDataURL(file);
    }
    
    // Prevent form submission if image is loading
    document.getElementById('submitBtn').addEventListener('click', function(e) {
        const loadingSpinner = document.getElementById('imageLoadingSpinner');
        if (!loadingSpinner.classList.contains('d-none')) {
            e.preventDefault();
            alert('Vui lòng đợi ảnh tải xong trước khi lưu');
        }
    });
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
