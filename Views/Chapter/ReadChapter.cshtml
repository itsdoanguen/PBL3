@model PBL3.ViewModels.Chapter.ChapterDetailViewModel
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@{
    ViewData["Title"] = Model.Title;
    Layout = "~/Views/Shared/_Layout.cshtml";
    var userIdClaim = User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier);
    ViewBag.CurrentUserID = userIdClaim != null ? int.Parse(userIdClaim.Value) : 0;
}

@functions {
    string GetTimeAgo(DateTime? date)
    {
        if (date == null) return Localizer["Unknown"].Value;
        var span = DateTime.Now - date.Value;
        if (span.TotalDays >= 1) return string.Format(Localizer["days"].Value, (int)span.TotalDays);
        if (span.TotalHours >= 1) return string.Format(Localizer["hours"].Value, (int)span.TotalHours);
        if (span.TotalMinutes >= 1) return string.Format(Localizer["minutes"].Value, (int)span.TotalMinutes);
        return Localizer["just now"].Value;
    }
    int CountAllComments(IEnumerable<PBL3.ViewModels.Chapter.CommentTreeViewModel> comments)
    {
        int total = 0;
        foreach (var comment in comments)
        {
            if (comment.Comment != null && !comment.Comment.isDeleted)
                total += 1;
            if (comment.Replies != null && comment.Replies.Any())
            {
                total += CountAllComments(comment.Replies);
            }
        }
        return total;
    }
}

@if (TempData["ScrollToComment"] != null)
{
	<input type="hidden" id="scrollToComment" value="@TempData["ScrollToComment"]" />
}

@section Styles {
	<link href="~/css/user-readchapter.css" rel="stylesheet" />
}
<style>
	.custom-style {
		background-color: @Model.Style.BackgroundColorHex;
		color: @Model.Style.TextColorHex;
	}
</style>

<div id="overlay" onclick="toggleSidebar()"></div>

<!-- Sidebar Danh sách chương -->
<div id="chapterSidebar">
	<div class="card-body">
		<h5 class="card-title">@Localizer["Chapter List"]</h5>

		<ul id="chap_list" class="unstyled">
			@foreach (var chap in Model.ChapterList)
			{
				<li class="@(chap.ChapterID == Model.ChapterID ? "current" : "")">
					<a href="@Url.Action("ReadChapter", "Chapter", new { id = chap.ChapterID })" class="d-block text-decoration-none">
						@chap.Title
					</a>
				</li>
			}
		</ul>
	</div>
</div>


<!-- Thanh nav dọc -->
<div id="floatingNav">
	<!-- Previous Chapter -->
	<a asp-controller="Chapter" asp-action="ReadChapter" asp-route-id="@Model.PreviousChapterID"
	   class="btn btn-outline-secondary btn-sm @(Model.PreviousChapterID == -1 ? "disabled" : "")" title="@Localizer["Previous Chapter"]">
		<i class="bi bi-arrow-left"></i>
	</a>

	<!-- Back to Story -->
	<a asp-controller="Story" asp-action="View" asp-route-id="@Model.StoryID"
	   class="btn btn-outline-secondary btn-sm" title="@Localizer["Back to Story"]">
		<i class="bi bi-house-door"></i>
	</a>

	<!-- Like -->
	<form asp-action="LikeChapter" asp-controller="LikeChapter" method="post" class="m-0 p-0 d-flex justify-content-center">
		@Html.AntiForgeryToken()
		<input type="hidden" name="chapterId" value="@Model.ChapterID" />
		<button type="submit" class="btn btn-sm @(Model.IsLikedByCurrentUser ? "btn-danger" : "btn-outline-danger") w-100" title="@Localizer["Like this chapter"]">
			<i class="bi bi-heart@(Model.IsLikedByCurrentUser ? "-fill" : "")"></i>
		</button>
	</form>

	<!-- Bookmark -->
	<form asp-action="Toggle" asp-controller="Bookmark" method="post" class="m-0 p-0 d-flex justify-content-center">
		@Html.AntiForgeryToken()
		<input type="hidden" name="chapterId" value="@Model.ChapterID" />
		<button type="submit" class="btn btn-sm @(Model.IsBookmarkedByCurrentUser ? "btn-primary" : "btn-outline-primary") w-100" 
			title="@(Model.IsBookmarkedByCurrentUser ? Localizer["Remove Bookmark"] : Localizer["Bookmark this chapter"])">
			<i class="bi bi-bookmark@(Model.IsBookmarkedByCurrentUser ? "-fill" : "")"></i>
		</button>
	</form>

	<!-- Chapter List -->
	<button class="btn btn-outline-secondary btn-sm" onclick="toggleSidebar()" title="@Localizer["Chapter List"]">
		<i class="bi bi-list"></i>
	</button>
	<!-- Reading Settings -->
	<button class="btn btn-outline-secondary btn-sm" title="@Localizer["Reading Settings"]" data-bs-toggle="modal" data-bs-target="#styleModal">
		<i class="bi bi-gear"></i>
	</button>

	@if ((ViewBag.CurrentUserID != null && ViewBag.AuthorID != null) && (ViewBag.CurrentUserID != ViewBag.AuthorID) && (ViewBag.CurrentUserID != 0))
	{
		<!-- Report Button -->
		<button type="button" 
				class="btn btn-outline-danger btn-sm" 
				title="@Localizer["Report this chapter"]"
				data-bs-toggle="modal" 
				data-bs-target="#reportChapterModal">
			<i class="bi bi-flag-fill"></i>
		</button>
	}

	<!-- Next Chapter -->
	<a asp-controller="Chapter" asp-action="ReadChapter" asp-route-id="@Model.NextChapterID"
	   class="btn btn-outline-secondary btn-sm @(Model.NextChapterID == -1 ? "disabled" : "")" title="@Localizer["Next Chapter"]">
		<i class="bi bi-arrow-right"></i>
	</a>
</div>

<!-- Nội dung chương -->
<div class="container-fluid py-4 position-relative custom-style" onclick="showFloatingNav()">
	<div class="card borderless custom-style">
		<div class="card-body custom-style">

			<!-- Thông tin tiêu đề chương -->
			<div class="chapter-header text-center py-3">
				<h2 class="title-item text-xl fw-bold">@Model.StoryTitle</h2>
				<h4 class="title-item fw-bold">@Model.Title</h4>
				<h6 class="chapter-meta">
					<a href="#chapter-comments" class="text-decoration-underline">@string.Format(Localizer["comments count"].Value, CountAllComments(Model.Comments ?? new List<PBL3.ViewModels.Chapter.CommentTreeViewModel>()))</a> -
					@string.Format(Localizer["word count"].Value, Model.TotalWord) -
					@Localizer["updated at"].Value
					<time title="@Model.UpdatedAt?.ToString("dd-MM-yyyy HH:mm:ss")" datetime="@Model.UpdatedAt?.ToString("s")">
						@GetTimeAgo(Model.UpdatedAt)
					</time>
				</h6>
			</div>

			<hr />

			<!-- Nội dung văn bản -->
			<div class="chapter-content center-cl" style="white-space: pre-line; font-family: @Model.Style.FontFamily.ToString(); font-size: @(Model.Style.FontSize + "px")">
				@Html.Raw(Model.Content)
			</div>

			<hr />

			<!-- Navigation dưới chương -->
			<div class="chapter-navigation d-flex justify-content-center gap-3 my-4">
				@if (Model.PreviousChapterID != -1)
				{
					<a asp-controller="Chapter" asp-action="ReadChapter" asp-route-id="@Model.PreviousChapterID" class="btn btn-outline-secondary" title="Chương trước">
						<i class="bi bi-arrow-left"></i>
					</a>
				}
				else
				{
					<button class="btn btn-outline-secondary disabled" disabled title="Chương trước"><i class="bi bi-arrow-left"></i></button>
				}

				<button class="btn btn-outline-info" onclick="toggleSidebar()" title="Danh sách chương">
					<i class="bi bi-list"></i>
				</button>

				@if (Model.NextChapterID != -1)
				{
					<a asp-controller="Chapter" asp-action="ReadChapter" asp-route-id="@Model.NextChapterID" class="btn btn-outline-secondary" title="Chương sau">
						<i class="bi bi-arrow-right"></i>
					</a>
				}
				else
				{
					<button class="btn btn-outline-secondary disabled" disabled title="Chương sau"><i class="bi bi-arrow-right"></i></button>
				}
			</div>

			<!-- Phần bình luận -->
			<div class="chapter-comments center-cl">
				<h5 class="mb-3" id="chapter-comments">@string.Format(Localizer["comments count"].Value, CountAllComments(Model.Comments ?? new List<PBL3.ViewModels.Chapter.CommentTreeViewModel>()))</h5>
				<!-- Form bình luận -->
				<div id="mainCommentForm">
					@await Html.PartialAsync("_CommentFormPartial", new PBL3.ViewModels.Chapter.CommentFormViewModel
					{
						ChapterID = Model.ChapterID,
						UserID = User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value,
						Type = "chapter",
						FormId = "main"
					})
				</div>
				<!-- Danh sách bình luận -->
				<div class="comment-box" id="commentList">
					@if (Model.Comments != null)
					{
						foreach (var comment in Model.Comments)
						{
							<partial name="_CommentPartial" model="@comment" />
						}
					}
				</div>
				<div id="paginationControls" class="mt-3 text-center"></div>
			</div>

		</div>
	</div>
</div>

<!-- Modal Cài đặt đọc -->
<div class="modal fade" id="styleModal" tabindex="-1" aria-labelledby="styleModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<form asp-action="UpdateStyle" asp-controller="Style" method="post" id="styleForm">
				@Html.AntiForgeryToken()
				<input type="hidden" name="UserID" value="@Model.Style.UserID" />
				<input type="hidden" name="StyleID" value="@Model.Style.StyleID" />
				<input type="hidden" name="ReturnChapterID" value="@Model.ChapterID" />

				<div class="modal-header">
					<h5 class="modal-title" id="styleModalLabel">@Localizer["Reading Settings"]</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="@Localizer["Close"]"></button>
				</div>

				<div class="modal-body">

					<!-- Font -->
					<div class="mb-3">
						<label for="FontFamily" class="form-label">@Localizer["Font"]</label>
						<select name="FontFamily" class="form-select">
							@foreach (var font in Enum.GetValues(typeof(PBL3.Models.FontFamily)))
							{
								var isSelected = Model.Style.FontFamily == (PBL3.Models.FontFamily)font ? "selected" : "";
								@Html.Raw($"<option value=\"{font}\" {isSelected}>{font}</option>")
							}
						</select>
					</div>

					<!-- Font Size -->
					<div class="mb-3">
						<label for="FontSize" class="form-label">@Localizer["Font Size"]</label>
						<input type="number" name="FontSize" class="form-control" value="@Model.Style.FontSize" min="12" max="48" />
					</div>

					<!-- Background Color -->
					<div class="mb-3">
						<label for="BackgroundColor" class="form-label">@Localizer["Background Color"]</label>
						<select name="BackgroundColor" class="form-select">
							@foreach (var bg in Enum.GetValues(typeof(PBL3.Models.BackgroundColor)))
							{
								var isSelected = Model.Style.BackgroundColor == (PBL3.Models.BackgroundColor)bg ? "selected" : "";
								@Html.Raw($"<option value=\"{bg}\" {isSelected}>{bg}</option>")
							}
						</select>
					</div>

					<!-- Text Color (read-only) -->
					<div class="mb-3">
						<label class="form-label">@Localizer["Text Color"]</label>
						<input type="color" class="form-control form-control-color" value="@Model.Style.TextColorHex" disabled />
					</div>

					<!-- Background Color Preview (read-only) -->
					<div class="mb-3">
						<label class="form-label">@Localizer["Background Color"]</label>
						<input type="color" class="form-control form-control-color" value="@Model.Style.BackgroundColorHex" disabled />
					</div>

				</div>

				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@Localizer["Cancel"]</button>
					<button type="submit" class="btn btn-primary">@Localizer["Save Changes"]</button>
				</div>
			</form>
		</div>
	</div>
</div>

<!-- Modal Report Chapter -->
<div class="modal fade" id="reportChapterModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@Localizer["Report Chapter"]</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="@Localizer["Close"]"></button>
            </div>
            <form asp-controller="Report" asp-action="ReportChapter" method="post" class="report-form">
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    <input type="hidden" name="chapterId" value="@Model.ChapterID" />
                    <input type="hidden" name="returnUrl" value="@Context.Request.Path" />
                    <div class="mb-3">
                        <label for="message" class="form-label">@Localizer["Report Reason"]</label>
                        <textarea class="form-control" id="message" name="message" 
                                  rows="3" required 
                                  placeholder="@Localizer["Enter report reason..."]"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@Localizer["Close"]</button>
                    <button type="submit" class="btn btn-danger">@Localizer["Send Report"]</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
	<script src="~/js/user-readchapter.js"></script>
	<script src="~/js/report.js"></script>
}



